<!-- Supondo que o HTML tenha um elemento com id 'ticketIdInput' e 'validationResult' -->
<%- include('../partials/header.ejs') %>

<body>
  <h1 class="text-center m-4"><i class="bi bi-gear-fill first-color"></i> Event Control</h1>
  <div id="eventDetails" class="container text-white bg-dark p-4 rounded"></div>
  <div class="container mt-4 bg-dark rounded p-2">
    <h3 class="text-center text-white">Validate Ticket</h3>
    <div class="d-flex justify-content-center">
      <div class="input-group mb-3 w-50">
        <input type="text" id="ticketIdInput" class="form-control" placeholder="Enter Ticket ID" aria-label="Ticket ID" aria-describedby="validateButton">
        <button class="btn button-one" type="button" id="validateButton" onclick="confirmValidateTicket()">Validate</button>
      </div>
    </div>
    <div class="d-flex justify-content-center mt-4">
      <button class="btn button-one" onclick="startQrScanner()">Scan QR Code</button>
    </div>
    <div class="d-flex justify-content-center mt-4" id="qrScannerContainer" style="display: none;">
      <video id="qrScanner" class="border border-white rounded"></video>
    </div>
    <div id="validationResult" class="text-center text-white mt-4"></div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/ethers@5.4.6/dist/ethers.min.js"></script>
  <script src="https://unpkg.com/@zxing/library@latest"></script>

  <script>
      const urlParams = new URLSearchParams(window.location.search);
      const eventId = urlParams.get('eventId');

      async function fetchEventDetails() {
          try {
              await window.ethereum.request({ method: 'eth_requestAccounts' });
              const provider = new ethers.providers.Web3Provider(window.ethereum);
              const signer = provider.getSigner();

              const contract = new ethers.Contract(contractAddress, contractABI, signer);
              const event = await contract.events(eventId);

              const eventDetailsDiv = document.getElementById('eventDetails');
              eventDetailsDiv.innerHTML = `
                  <h2>${event.name}</h2>
                  <p>${event.details}</p>
                  <ul class="list-group list-group-flush rounded" style="font-size: 14px;">
                      <li class="list-group-item bg-dark">Total Tickets: ${event.totalTickets}</li>
                      <li class="list-group-item bg-dark">Price: ${ethers.utils.formatEther(event.price)} ETH</li>
                      <li class="list-group-item bg-dark">Tickets Sold: ${event.ticketsSold}</li>
                      <li class="list-group-item bg-dark">Tickets Available: ${await contract.ticketsAvailable(eventId)}</li>
                  </ul>
              `;
          } catch (error) {
              console.error('Error fetching event details:', error);
              alert('Error fetching event details.');
          }
      }

      async function confirmValidateTicket() {
          const ticketId = document.getElementById('ticketIdInput').value;
          if (!ticketId) {
              alert('Please enter a Ticket ID.');
              return;
          }

          // Confirm with the user before proceeding
          const confirmed = confirm('Are you sure you want to validate this ticket?');
          if (confirmed) {
              await validateTicket(ticketId);
          }
      }

      async function validateTicket(ticketId) {
          try {
              const response = await fetch(`/checkTicket?ticketId=${ticketId}`);
              const result = await response.text();
              document.getElementById('validationResult').innerText = result;
          } catch (error) {
              console.error('Error validating ticket:', error);
              document.getElementById('validationResult').innerText = `Error validating ticket ID ${ticketId}.`;
          }
      }

    function startQrScanner() {
        document.getElementById('qrScannerContainer').style.display = 'block';
        const codeReader = new ZXing.BrowserQRCodeReader();
        codeReader.decodeFromVideoDevice(null, 'qrScanner', (result, err) => {
            if (result) {
                // Extrair apenas o ticketId do resultado
                const qrText = result.text;
                const ticketIdMatch = qrText.match(/ticketId=(\d+)/);

                if (ticketIdMatch) {
                    const ticketId = ticketIdMatch[1];
                    document.getElementById('ticketIdInput').value = ticketId;
                    confirmValidateTicket(); // Substitua pela função de validação desejada
                } else {
                    alert('Invalid QR Code.');
                }
                codeReader.reset();
                document.getElementById('qrScannerContainer').style.display = 'none';
            }
            if (err && !(err instanceof ZXing.NotFoundException)) {
                console.error(err);
            }
        });
    }

    function confirmValidateTicket() {
        const ticketId = document.getElementById('ticketIdInput').value;
        if (!ticketId) {
            alert('Please enter a Ticket ID.');
            return;
        }

        const confirmation = confirm('Are you sure you want to validate this ticket?');
        if (confirmation) {
            validateTicket();
        }
    }

    async function validateTicket() {
        const ticketId = document.getElementById('ticketIdInput').value;
        if (!ticketId) {
            alert('Please enter a Ticket ID.');
            return;
        }

        try {
            const response = await fetch(`/checkTicket?ticketId=${ticketId}`);
            const result = await response.text();
            document.getElementById('validationResult').innerText = result;
        } catch (error) {
            console.error('Error validating ticket:', error);
            document.getElementById('validationResult').innerText = `Error validating ticket ID ${ticketId}.`;
        }
    }

      document.addEventListener('DOMContentLoaded', fetchEventDetails);
  </script>
</body>

<%- include('../partials/footer.ejs') %>
